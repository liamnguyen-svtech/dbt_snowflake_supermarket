
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_snowflake_supermarket'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_snowflake_supermarket'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

dispatch:
  - macro_namespace: dbt_meta_testing
    search_order: ['dbt_snowflake_supermarket', 'dbt_meta_testing']
# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  dbt_snowflake_supermarket:
    +required_docs: true
    staging:
      +materialized: view
      +required_tests: {"unique": 1, "not_null": 1}
    marts:
      +materialized: table
      +required_tests: {"unique": 1, "not_null": 1}
      customer_order_summary:
        +required_tests:
          "check.*|unique": 1
          "not_null": 2
          "test_customer_order_summary": 1
      store_sales_summary:
        +required_tests:
          "unique": 1
          "not_null": 2
